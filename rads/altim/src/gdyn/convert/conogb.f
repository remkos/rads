      PROGRAM CONOGB
C********1*********2*********3*********4*********5*********6*********7**
C CONOGB           93/09/23            9309.0    PGMR - SCOTT B. LUTHCKE
C
C
C *** TO BE USED WITH TDF9201 AND ABOVE
C
C FUNCTION:         THIS PROGRAM CONVERTS OLD GEODYN1 BINARY DATA,
C                   BINARY EXTENDED ALTIMETRY DATA, AND BINARY METRIC
C                   DATA TO THE NEW FORMAT WHICH CONTAINS ONLY I*4'S
C                   AND R*8'S.  THIS PROGRAM ONLY CONVERTS TO THE NEW
C                   IBM BINARY FORMAT.  IF YOU WISH TO CONVERT YOUR
C                   OLD GEODYN1 BINARY DATA TO THE NEW GEODYN1 BINARY
C                   DATA FORMAT FOR THE CRAY, DO THE FOLLOWING:
C
C                   1) CONVERT OLD IBM GEODYN1 BINARY FORMAT TO CARD
C                      IMAGE FORMAT BY PUTTING THE CARD 'CRAY' ON UNIT
C                      4.
C                   2) THEN THE PROGRAM CONCAR ON THE CRAY NEEDS TO
C                      BE EXECUTED ON THE ABOVE CARD IMAGE DATA SET
C                      TO CREATE A NEW GEODYN1 CRAY FORMAT DATA SET
C                      THE CRAY TDF CAN THEN READ THIS BINARY
C                      FORMAT.
C
C UNITS:
C        UNIT 4 - INPUT OPTION CARDS.  THE CHOICES ARE:
C                 CRAY - OUTPUT IS TO BE CARD IMAGE FOR THE CRAY CONCAR
C                        PROGRAM
C                 METRIC - INPUT DATA IS OLD METRIC BINARY FORMAT
C                 EXALT  - INPUT DATA IS OLD BINARY EXTENDED ALTIMETER
C
C * IF NO CARDS ARE PRESENT THEN THE INPUT DATA IS OLD GEODYN1 BINARY
C   AND OUTPUT IS NEW GEODYN1 BINARY FOR THE IBM
C
C       UNIT 10 - INPUT DATA SET
C       UNIT 11 - OUTPUT CONVERTED DATA SET
C       UNIT 6  - PROGRAM INFORMATIVE MESSAGES AND CONTROL MESSAGES
C
C RESTRICTIONS: THIS PROGRAM CAN ONLY BE RUN ON THE IBM MAINFRAME.
C
C********1*********2*********3*********4*********5*********6*********7**
      IMPLICIT REAL*8 (A-H,O-Z),LOGICAL(L)
      CHARACTER*6 CARD,CRAY,METRIC,EXALT
      REAL GEODN1,GEXALT,GMETRC
      INTEGER*2 I2GDN1,I2GEXA
C USED FOR GEODYN1 BINARY
      COMMON/GEOBEG/ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC           GEO1
      COMMON/GEOANG/OBSRTA,OBSDEC,STDDV1,STDDV2,TROPXA,TROPEL,
     1 RD1ANG,RD2ANG,RD3ANG,RD4ANG
      COMMON/GEORNG/OBSRNG,ISTARG,ISATRG,STDVRG,TROPRG,METRNG,
     1 IDMRNG,RNGION,ANTRNG,COMRNG,RD1RNG,RD2RNG
      COMMON/GEORGR/OBSRGR,ISTRR1,ISTRR2,STDVRR,INTCRR,IDMRGR,TROPRR,
     1 RGRION,RGRR01,RGRR02,RD1RGR,RD2RGR
      COMMON/GEOALT/OBSALT,SATLAT,SATLON,STDVAL,ALTBIS,TROPAL,ALTION,
     1 ALTGEO,ALTTID,RDMALT
      COMMON/GEOMIN/OBSMNE,OBSMNN,STDVME,STDVMN,TROPME,TROPMN,CORIOE,
     1 CORION,RD1MIN,RD2MIN
      COMMON/GEOLND/CNTELM,CNTLIN,STDVEC,STDVLC,ILNDLT,ILNDLG,ILNDBT,
     1 ILNDST,RD1LND,RD2LND,RD3LND,RD4LND                               GEO1
      COMMON/GEOEXA/OBSEXA,ISATLT,ISATLN,STDVEA,INSCOR,METEXA,
     1 MEDCOR,IDMEXA,GEOHEX,IOCCOR,ISURF,IREV,ISRFMN,IDOD,IH13,IAGC,    GEO1
     2 IWIND,ISRFPR,IDTROP,IFNOC,ISMMR,IONC,IBARO,ISTID,IOCNT1,IOCNT2,  GEO1
     3 ID2EXA
C USED FOR METRIC BINARY
      COMMON/METRIC/MTS1,MTT1,MTS2,MTT2,MTS3,MTT3,MTMTTS,
     1  MTUSMT,MTPSMT,MTSSMT,MTPRE,MTOBT,GPPOBT,GPSOBT,GPOBS,
     2  GPAMB,GPSATP,GPSATS,GPSTAP,GPSTAS,SPARE,HCG,HAAD,
     3  HTROPO,HION,HXPD,HRELC,HSPARE,HLIGHT,HOPWLN,HSTDDV
      COMMON/UNITS/IN,IOUT,ICARD,IMSG
C
      DIMENSION GEODN1(17),IGEDN1(17),I2GDN1(34)
      DIMENSION GEODD1(3)
      DIMENSION GEXALT(27),IGEXAL(27),I2GEXA(54)
      DIMENSION GEXADD(2)
      DIMENSION GMETRC(40),IGMETR(80),GMETDD(9)
      DIMENSION LINPRE(31)
C
      EQUIVALENCE(GEODN1(1),IGEDN1(1)),(GEODN1(1),I2GDN1(1))
      EQUIVALENCE(GEODD1(1),GEODN1(6))
      EQUIVALENCE(GEXALT(1),IGEXAL(1)),(GEXALT(1),I2GEXA(1))
      EQUIVALENCE(GEXADD(1),GEXALT(6))
      EQUIVALENCE(GMETRC(1),IGMETR(1)),(GMETDD(1),GMETRC(13))
C
      DATA CRAY,METRIC,EXALT/'CRAY','METRIC','EXALT'/
      DATA IDUM/0/
      DATA RDUM/0.0D0/
C
C**********************************************************************
C START OF EXECUTABLE CODE
C**********************************************************************
C * INITIALIZATIONS
      LCRAY=.FALSE.
      LMETRC=.FALSE.
      LEXALT=.FALSE.
      IN=10
      IOUT=11
      IMSG=6
      ICARD=4
C READ OPTION CARDS
  100 READ(ICARD,10000,END=200) CARD
      IF(CARD.EQ.CRAY) LCRAY=.TRUE.
      IF(CARD.EQ.METRIC) THEN
      LMETRC=.TRUE.
      ELSE IF(CARD.EQ.EXALT) THEN
      LEXALT=.TRUE.
      ENDIF
      GOTO 100
  200 CONTINUE
C OPTION CARDS HAVE BEEN READ - PRINT OUT OPTIONS SELECTED
      IF(LCRAY) WRITE(IMSG,10001)
      IF(LMETRC) THEN
      WRITE(IMSG,10100)
      ELSE IF(LEXALT) THEN
      WRITE(IMSG,10200)
      ELSE
      WRITE(IMSG,10300)
      ENDIF
C READ TYPE OF INPUT FORMAT AND LOAD CORRECT COMMON BLOCK
      IF(LEXALT) GOTO 1000
      IF(LMETRC) GOTO 2000
C****************************
C INPUT = GEODYN1 BINARY
C****************************
C ...READ GEODYN1 BINARY FORMAT
 300  READ(IN,END=9999) GEODN1
C ....LOAD GEOBEG COMMON BLOCK
      ISATID=IGEDN1(1)
      KTYPE=I2GDN1(3)
      KTIME=I2GDN1(4)
      ISTATN=IGEDN1(3)
      IPRE=IGEDN1(4)
      IMJD=IGEDN1(5)
      DFRAC=GEODD1(1)
C ....LOAD APPROPRIATE DATA TYPE BASED ON KTYPE, AND OUTPUT THE DATA
      IFORM=KTYPE/10
      GOTO (503,505,507,509,512,503,503,9001,507) IFORM
C ......KTYPE IS NOT OF CORRECT FORM
      GOTO 9001
C .....LOAD GEOANG COMMON BLOCK AND WRITE OUT
  503 CONTINUE
      OBSRTA=GEODD1(2)
      OBSDEC=GEODD1(3)
      STDDV1=GEODN1(12)
      STDDV2=GEODN1(13)
      TROPXA=GEODN1(14)
      TROPEL=GEODN1(15)
      IF(.NOT.LCRAY) THEN
      WRITE(IOUT) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC,
     1            OBSRTA,OBSDEC,STDDV1,STDDV2,TROPXA,TROPEL,
     2            RDUM,RDUM,RDUM,RDUM
      ELSE
      WRITE(IOUT,10400) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC
      WRITE(IOUT,10500) OBSRTA,OBSDEC,STDDV1,STDDV2,TROPXA
      WRITE(IOUT,10600) TROPEL
      ENDIF
      GOTO 300
C .....LOAD GEORNG COMMON BLOCK AND WRITE OUT
  505 CONTINUE
      OBSRNG=GEODD1(2)
      ISTARG=IGEDN1(10)
      ISATRG=IGEDN1(11)
      STDVRG=GEODN1(12)
      TROPRG=GEODN1(13)
      METRNG=IGEDN1(14)
      IDMRNG=0
      RNGION=GEODN1(15)
      ANTRNG=GEODN1(16)
      COMRNG=GEODN1(17)
      IF(.NOT.LCRAY) THEN
      WRITE(IOUT) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC,
     1            OBSRNG,ISTARG,ISATRG,STDVRG,TROPRG,METRNG,
     2            IDMRNG,RNGION,ANTRNG,COMRNG,RDUM,RDUM
      ELSE
      WRITE(IOUT,10400) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC
      WRITE(IOUT,10700) OBSRNG,ISTARG,ISATRG,STDVRG,TROPRG
      WRITE(IOUT,10800) METRNG,IDMRNG,RNGION,ANTRNG,COMRNG
      ENDIF
      GOTO 300
C .....LOAD GEORGR COMMON BLOCK AND WRITE OUT
  507 CONTINUE
C ......DETERMINE IF THE TROPRR WORD ACTUALLY CONTAINS A METWRD
      CALL DECOM1(IPRE,LINPRE,31)
C DEBUG
C     PRINT *,' DEBUG: LINPRE(10) IS: ',LINPRE(10)
C DEBUG
      OBSRGR=GEODD1(2)
      ISTRR1=IGEDN1(10)
      ISTRR2=IGEDN1(11)
      STDVRR=GEODN1(12)
      INTCRR=IGEDN1(13)
      IDMRGR=0
C .......LOAD BOTH A POSSIBLE TROP CORRECTION OR A MET WORD
      TROPRR=GEODN1(14)
      IMETRR=IGEDN1(14)
      RGRION=GEODN1(15)
      RGRR01=GEODN1(16)
      RGRR02=GEODN1(17)
      IF(.NOT.LCRAY) THEN
       IF(.NOT.LINPRE(10)) THEN
       WRITE(IOUT) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC,
     1            OBSRGR,ISTRR1,ISTRR2,STDVRR,INTCRR,IDMRGR,
     2            TROPRR,RGRION,RGRR01,RGRR02,RDUM,RDUM
       ELSE
       WRITE(IOUT) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC,
     1            OBSRGR,ISTRR1,ISTRR2,STDVRR,INTCRR,IDMRGR,IMETRR,
     2            IDUM,RGRION,RGRR01,RGRR02,RDUM,RDUM
       ENDIF
      ELSE
C
      IF(LINPRE(10)) THEN
      IFLAG=1
      ELSE
      IFLAG=0
      ENDIF
C
      WRITE(IOUT,10400) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC
      WRITE(IOUT,10900) OBSRGR,ISTRR1,ISTRR2,STDVRR,INTCRR,IFLAG
       IF(.NOT.LINPRE(10)) THEN
       WRITE(IOUT,11000) TROPRR,RGRION,RGRR01,RGRR02
       ELSE
       WRITE(IOUT,10801) IMETRR,RGRION,RGRR01,RGRR02
       ENDIF
      ENDIF
      GOTO 300
C .....LOAD GEOALT COMMON BLOCK AND WRITE OUT
  509 CONTINUE
      OBSALT=GEODD1(2)
      SATLAT=GEODN1(10)
      SATLON=GEODN1(11)
      STDVAL=GEODN1(12)
      ALTBIS=GEODN1(13)
      TROPAL=GEODN1(14)
      ALTION=GEODN1(15)
      ALTGEO=GEODN1(16)
      ALTTID=GEODN1(17)
      IF(.NOT.LCRAY) THEN
      WRITE(IOUT) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC,
     1            OBSALT,SATLAT,SATLON,STDVAL,ALTBIS,TROPAL,
     2            ALTION,ALTGEO,ALTTID,RDUM
      ELSE
      WRITE(IOUT,10400) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC
      WRITE(IOUT,10500) OBSALT,SATLAT,SATLON,STDVAL,ALTBIS
      WRITE(IOUT,11000) TROPAL,ALTION,ALTGEO,ALTTID
      ENDIF
      GOTO 300
C .....LOAD GEOMIN AND GEOLND COMMON BLOCK AND WRITE OUT
  512 CONTINUE
      IF((KTYPE.EQ.55).OR.(KTYPE.EQ.56)) GOTO 514
      OBSMNE=GEODD1(2)
      OBSMNN=GEODD1(3)
      STDVME=GEODN1(11)
      STDVMN=GEODN1(12)
      TROPME=GEODN1(13)
      TROPMN=GEODN1(14)
      CORIOE=GEODN1(15)
      CORION=GEODN1(16)
      IF(.NOT.LCRAY) THEN
      WRITE(IOUT) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC,
     1            OBSMNE,OBSMNN,STDVME,STDVMN,TROPME,TROPMN,
     2            CORIOE,CORION,RDUM,RDUM
      ELSE
      WRITE(IOUT,10400) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC
      WRITE(IOUT,10500) OBSMNE,OBSMNN,STDVME,STDVMN,TROPME
      WRITE(IOUT,11000) TROPMN,CORIOE,CORION,RDUM
      ENDIF
      GOTO 300
  514 CONTINUE
      CNTELM=GEODD1(2)
      CNTLIN=GEODD1(3)
      STDVEC=GEODN1(11)
      STDVLC=GEODN1(12)
      ILNDLT=IGEDN1(13)
      ILNDLG=IGEDN1(14)
      ILNDBT=IGEDN1(15)
      ILNDST=IGEDN1(16)
      IF(.NOT.LCRAY) THEN
      WRITE(IOUT) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC,
     1            CNTELM,CNTLIN,STDVEC,STDVLC,ILNDLT,ILNDLG,
     2            ILNDBT,ILNDST,RDUM,RDUM,RDUM,RDUM
      ELSE
      WRITE(IOUT,10400) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC
      WRITE(IOUT,11100) CNTELM,CNTLIN,STDVEC,STDVLC,ILNDLT
      WRITE(IOUT,11200) ILNDLG,ILNDBT
      ENDIF
      GOTO 300
C****************************
C INPUT = EXTENDED ALTIMETRY
C****************************
 1000 CONTINUE
C ...READ GEODYN1 BINARY FORMAT EXTENDED FOR ALTIMETRY
 1100 READ(IN,END=9999) GEXALT
C ....LOAD GEOEXA COMMON BLOCK
      ISATID=IGEXAL(1)
      KTYPE=I2GEXA(3)
      KTIME=I2GEXA(4)
      ISTATN=IGEXAL(3)
      IPRE=IGEXAL(4)
      IMJD=IGEXAL(5)
      DFRAC=GEXADD(1)
      OBSEXA=GEXADD(2)
      ISATLT=IGEXAL(10)
      ISATLN=IGEXAL(11)
      STDVEA=GEXALT(12)
      INSCOR=IGEXAL(13)
      METEXA=IGEXAL(14)
      MEDCOR=IGEXAL(15)
      IDMEXA=0
      GEOHEX=GEXALT(16)
      IOCCOR=IGEXAL(17)
      ISURF =IGEXAL(18)
      IREV  =IGEXAL(19)
      ISRFMN=IGEXAL(20)
      IDOD  =IGEXAL(21)
      IH13  =I2GEXA(43)
      IAGC  =I2GEXA(44)
      IWIND =I2GEXA(45)
      ISRFPR=I2GEXA(46)
      IDTROP=I2GEXA(47)
      IFNOC =I2GEXA(48)
      ISMMR =I2GEXA(49)
      IONC  =I2GEXA(50)
      IBARO =I2GEXA(51)
      ISTID =I2GEXA(52)
      IOCNT1=I2GEXA(53)
      IOCNT2=I2GEXA(54)
      ID2EXA=0
      IF(.NOT.LCRAY) THEN
      WRITE(IOUT) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC,
     1            OBSEXA,ISATLT,ISATLN,STDVEA,INSCOR,METEXA,
     2            MEDCOR,IDMEXA,GEOHEX,IOCCOR,ISURF,IREV,ISRFMN,IDOD,
     3            IH13,IAGC,IWIND,ISRFPR,IDTROP,IFNOC,ISMMR,
     4            IONC,IBARO,ISTID,IOCNT1,IOCNT2,ID2EXA
      ELSE
      WRITE(IOUT,10400) ISATID,KTYPE,KTIME,ISTATN,IPRE,IMJD,DFRAC
      WRITE(IOUT,11300) OBSEXA,ISATLT,ISATLN,STDVEA,INSCOR,METEXA,
     1                  MEDCOR,IDMEXA,GEOHEX
      WRITE(IOUT,11400) IOCCOR,ISURF,
     1                  IREV,ISRFMN,IDOD,IH13,IAGC,IWIND,ISRFPR,
     2                  IDTROP,IFNOC,ISMMR,IONC,IBARO,ISTID,
     3                  IOCNT1,IOCNT2
      ENDIF
      GOTO 1100
C****************************
C INPUT = METRIC DATA
C****************************
 2000 CONTINUE
C ...READ GEODYN BINARY METRIC FORMAT
 2100 READ(IN,END=9999) GMETRC
C ....LOAD METRIC COMMON BLOCK
      MTS1  =IGMETR(1)
      MTT1  =IGMETR(2)
      MTS2  =IGMETR(3)
      MTT2  =IGMETR(4)
      MTS3  =IGMETR(5)
      MTT3  =IGMETR(6)
      MTMTTS=IGMETR(7)
      MTUSMT=IGMETR(8)
      MTPSMT=IGMETR(9)
      MTSSMT=IGMETR(10)
      MTPRE =IGMETR(11)
      MTOBT =IGMETR(12)
      GPPOBT=GMETDD(1)
      GPSOBT=GMETDD(2)
      GPOBS =GMETDD(3)
      GPAMB =GMETDD(4)
      GPSATP=GMETDD(5)
      GPSATS=GMETDD(6)
      GPSTAP=GMETDD(7)
      GPSTAS=GMETDD(8)
      SPARE =GMETDD(9)
      HCG   =GMETRC(31)
      HAAD  =GMETRC(32)
      HTROPO=GMETRC(33)
      HION  =GMETRC(34)
      HXPD  =GMETRC(35)
      HRELC =GMETRC(36)
      HSPARE=GMETRC(37)
      HLIGHT=GMETRC(38)
      HOPWLN=GMETRC(39)
      HSTDDV=GMETRC(40)
      IF(.NOT.LCRAY) THEN
      WRITE(IOUT) MTS1,MTT1,MTS2,MTT2,MTS3,MTT3,MTMTTS,MTUSMT,
     1            MTPSMT,MTSSMT,MTPRE,MTOBT,GPPOBT,GPSOBT,GPOBS,
     2            GPAMB,GPSATP,GPSATS,GPSTAP,GPSTAS,SPARE,HCG,
     3            HAAD,HTROPO,HION,HXPD,HRELC,HSPARE,HLIGHT,HOPWLN,
     4            HSTDDV
      ELSE
      WRITE(IOUT,11500) MTS1,MTT1,MTS2,MTT2,MTS3,MTT3,MTMTTS,MTUSMT,
     1                  MTPSMT,MTSSMT,MTPRE,MTOBT
      WRITE(IOUT,10500) GPPOBT,GPSOBT,GPOBS,GPAMB,GPSATP
      WRITE(IOUT,10500) GPSATS,GPSTAP,GPSTAS,SPARE,HCG
      WRITE(IOUT,10500) HAAD,HTROPO,HION,HXPD,HRELC
      WRITE(IOUT,11000) HSPARE,HLIGHT,HOPWLN,HSTDDV
      ENDIF
      GOTO 2100
C ERROR MESSAGES
 9001 WRITE(IMSG,90001) IFORM
      STOP
 9999 WRITE(IMSG,99999)
      STOP
10000 FORMAT(A6)
10001 FORMAT(1X,'*** OUTPUT DATA WILL BE CARD IMAGE FOR CRAY ***')
10100 FORMAT(1X,'*** INPUT DATA IS METRIC BINARY ***')
10200 FORMAT(1X,'*** INPUT DATA IS EXTENDED ALTIMETER BINARY ***')
10300 FORMAT(1X,'*** INPUT DATA IS GEODYN1 BINARY ***')
10400 FORMAT(I10,2I3,3I25,D25.16)
10500 FORMAT(5D25.16)
10600 FORMAT(D25.16)
10700 FORMAT(D25.16,2I25,2D25.16)
10800 FORMAT(2I25,3D25.16)
10801 FORMAT(I25,3D25.16)
10900 FORMAT(D25.16,2I25,D25.16,I25,I1)
11000 FORMAT(4D25.16)
11100 FORMAT(4D25.16,I25)
11200 FORMAT(2I25)
11300 FORMAT(D25.16,2I11,D25.16,3I11,I2,D25.16)
11400 FORMAT(5I11,12I6)
11500 FORMAT(12I11)
90001 FORMAT(1X,'*** ERROR AND ABNORMAL TERMINATION *** IFORM IS '
     .       ,'IMPROPER; IFORM=',I3)
99999 FORMAT(1X,'*** NORMAL TERMINATION OF PROGRAM ***',/,
     .       1X,'***     VERSION NUMBER: 9309      ***')
      END
C
C
C
C$DECOM1
      SUBROUTINE DECOM1(INPRE,LINPRE,NPRE)
C***********************************************************************
C
C VERSION           - 8410.0  DATE- 10/10/84      PGMR- TOM MARTIN
C
C FUNCTION          - DECOMPOSE PREPROCESSING WORD FROM
C                     GEODYN-I BINARY TRACKING DATA FORMAT
C
C INPUT PARAMETERS  - INPRE =GEODYN-I BINARY TRACKING DATA PREPRO WORD
C                     NPRE  =NUMBER OF LEAST SIGNIFICANT BITS TO BE
C                            DECOMPOSED
C
C OUTPUT PARAMETERS - LINPRE=GEODYN-I BINARY TRACKING DATA PREPRO WORD
C                            DECOMPOSED INTO LOGICAL ARRAY
C
C***********************************************************************
      IMPLICIT REAL*8 (A-H,O-Z),LOGICAL(L)
      DIMENSION LINPRE(NPRE)
      INDEX=NPRE
      JPRE=INPRE
      DO 1000 I=1,NPRE
      KPRE=JPRE/2
      IODD=JPRE-KPRE*2
      LINPRE(INDEX)=IODD.EQ.1
      JPRE=KPRE
      INDEX=INDEX-1
 1000 CONTINUE
      RETURN
      END
